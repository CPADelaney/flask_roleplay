name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      # Copy the web config to fly.toml
      - name: Set up configuration for Web App
        run: cp fly.web.toml fly.toml

      - name: Deploy Web App
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy -a flask-roleplay

  deploy-worker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      # Copy the worker config to fly.toml
      - name: Set up configuration for Worker App
        run: cp fly.worker.toml fly.toml

      - name: Deploy Worker App
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy -a flask-roleplay-worker
